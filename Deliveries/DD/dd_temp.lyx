#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{hyperref}
\hypersetup{colorlinks, citecolor=black, filecolor=black, linkcolor=black, urlcolor=black}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
Politecnico di Milano 
\begin_inset Newline newline
\end_inset

Scuola di Ingegneria dellâ€™Informazione 
\begin_inset Newline newline
\end_inset

Corso di Laurea Magistrale in Computer Science and Engineering
\begin_inset Newline newline
\end_inset

 A.Y.
 2015-2016
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace 1cm
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Title
\paragraph_spacing single
Software Engineering 2 Project
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Quotes eld
\end_inset

myTaxiService
\begin_inset Quotes erd
\end_inset


\begin_inset Newline newline
\end_inset

D
\series default
esign 
\series bold
D
\series default
ocument
\end_layout

\begin_layout Standard
\align left
\begin_inset VSpace 3cm
\end_inset

Principal Adviser: Prof.
 
\series bold
Di Nitto
\end_layout

\begin_layout Standard
\align right
Authors:
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
Davide Fisicaro
\series default
 854043
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
Gianmarco Giummarra
\series default
 852667
\begin_inset Newline newline
\end_inset


\series bold
Salvatore Ferrigno
\series default
 850130
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tableofcontents
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
The Design Document is a document which will help the software development
 by providing a detailed functional description of the system to be developed.
 It will include narrative and graphical documentation of the design for
 the project, including Use Case models, Sequence diagrams and other supporting
 requirement information.
\end_layout

\begin_layout Subsection
Definitions, Acronyms, Abbreviations
\end_layout

\begin_layout Subsection
Reference Documents
\end_layout

\begin_layout Subsection
Document Structure
\end_layout

\begin_layout Section
Architectural Design
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The myTaxiService system will be developed on the J2EE platform, for many
 reasons:
\end_layout

\begin_layout Itemize
to manage the big number of possible users;
\end_layout

\begin_layout Itemize
to help developers building it as a distributed system;
\end_layout

\begin_layout Itemize
to allow the developers to concentrate on business logic;
\end_layout

\begin_layout Itemize
to satisfy the portability requirement;
\end_layout

\begin_layout Standard
Furthermore it must be said that the system will be built in a multi-tier
 and multi-layer architecture that will be specified below.
\end_layout

\begin_layout Subsection
High level components and their interaction
\end_layout

\begin_layout Standard
From a high level point of view, the system will be designed according to
 the traditional multi-tier architecture used in enterprise applications.
 In more detail, the architecture will consist of four logical levels: the
 Client tier, the Web tier, the Business tier and the Data tier.
 The Client tier is allocated to the terminal the user logs in from, the
 Web tier and the Business tier stays on the Application Server, and the
 Data tier stays on the DBMS: this decision is made in order to guarantee
 properties such as scalability and fault tolerance.
 The Business tier are expected to interact with a mail server, using the
 SMTP protocol to send users messages, for example the confirmation code
 of the recording or the confirmation of a reservation.
\end_layout

\begin_layout Standard
Here follows a detailed description of each logical level:
\end_layout

\begin_layout Itemize

\series bold
Client tier: 
\series default
accessible via the web or mobile application.
 This tier interacts with the Web tier through an HTTP connection, requesting
 HTML pages and eventually sending data provided by the user.
 Furtermore the browser interprets the JavaScript code, in order to provide
 an improvement of performances of the service (e.g.
 validation forms or asynchronous requests to the server).
 
\end_layout

\begin_layout Itemize

\series bold
Web tier: 
\series default
this level receives from the Client tier HTTP requests and answers with
 HTML pages, generated basing on the data received, and eventually forwards
 requests to the Business tier.
 The Web tier will be implemented with JEE technology and will work with
 a compatible application server.
\end_layout

\begin_layout Itemize

\series bold
Business tier: 
\series default
this tier can directly communicate with the database and encapsulates the
 business logic.
 The model is based on a MVC pattern, and the persistent application data
 are represented by Entity Beans objects.
 The interaction with the database and the application logic are made with
 EJB components.
 To access the database this tier uses the JPA specification, which also
 features ORM, abstracting the relational model implemented by the database
 in a model of data objects, in order to allow the interaction with the
 application.
\end_layout

\begin_layout Itemize

\series bold
Data tier: 
\series default
it consists of a DBMS in order to guarantee data persistency.
 The Business tier communicates with the database using the standard technologie
s oj java (JDBC).
\end_layout

\begin_layout Subsection
Component view
\end_layout

\begin_layout Subsection
Deployment view
\end_layout

\begin_layout Subsection
Runtime view
\end_layout

\begin_layout Standard
(You can use sequence diagrams to describe the way components interact to
 accomplish specific tasks typically related to your use cases)
\end_layout

\begin_layout Subsection
Component interfaces
\end_layout

\begin_layout Subsection
Selected architectural styles and patterns
\end_layout

\begin_layout Standard
(Please explain which styles/patterns you used, why, and how)
\end_layout

\begin_layout Subsection
Other design decisions
\end_layout

\begin_layout Section
Algorithm design
\end_layout

\begin_layout Standard
(Focus on the definition of the most relevant algorithmic part of your project)
\end_layout

\begin_layout Section
User interface design
\end_layout

\begin_layout Standard
(Provide an overview on how the user interface(s) of your system will look
 like.
 If you have included this part in the RASD, you can simply refer to what
 you have already done, possibly, providing here some extensions if applicable)
\end_layout

\begin_layout Section
Requirements traceability
\end_layout

\begin_layout Standard
(Explain how the requirements you have defined in the RASD map into the
 design elements that you have defined in this document)
\end_layout

\begin_layout Section
References
\end_layout

\begin_layout Section
Glossary
\end_layout

\begin_layout Itemize

\series bold
DBMS:
\series default
 database management system, a software that control the creation, maintenance,
 and use of a database.
 (e.g.
 MySQL).
\end_layout

\begin_layout Itemize

\series bold
HTML:
\series default
 HyperText Markup Language, a markup language for building web pages.
\end_layout

\begin_layout Itemize

\series bold
HTTP:
\series default
 Hypertext Transfer Protocol, an application protocol used by web browsers.
\end_layout

\begin_layout Itemize

\series bold
SMTP: 
\series default
Simple Message Transfer Protocol, an internet standard for e-mail transmission.
\end_layout

\begin_layout Itemize

\series bold
MVC:
\series default
 Model-View-Control, a design pattern.
\end_layout

\begin_layout Itemize

\series bold
JDBC:
\series default
 Java Database Connectivity, a Java API that allows the application to communica
te with a database.open source database manager system, a software capable
 of managing data.
\end_layout

\begin_layout Itemize

\series bold
JPA: 
\series default
Java Persistent API, a programming interface specification that describes
 the management of relational data.
\end_layout

\begin_layout Itemize

\series bold
ORM: 
\series default
Object Relational Mapping, a technique of access do databases from object
 oriented languages.
\end_layout

\begin_layout Itemize

\series bold
EJB:
\series default
 Enterprise JavaBeans, a managed server-side component architecture for
 modular construction of enterprise applications.
\end_layout

\begin_layout Itemize

\series bold
Entity bean:
\series default
 a distributed object that have persistent state.
\end_layout

\end_body
\end_document
